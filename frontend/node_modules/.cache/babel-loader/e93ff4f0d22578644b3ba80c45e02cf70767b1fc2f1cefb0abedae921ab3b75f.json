{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Escritorio\\\\DLOOToDoList\\\\frontend\\\\src\\\\components\\\\Task\\\\TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskModal({\n  isOpen,\n  onClose,\n  onSave,\n  task\n}) {\n  _s();\n  const [taskName, setTaskName] = useState(task ? task.name : '');\n  const [taskDescription, setTaskDescription] = useState(task ? task.description : '');\n  const [taskDate, setTaskDate] = useState(task ? new Date(task.date) : new Date());\n  const handleSave = () => {\n    onSave({\n      name: taskName,\n      description: taskDescription,\n      date: taskDate,\n      status: task ? task.status : 'hoy'\n    });\n    setTaskName('');\n    setTaskDescription('');\n    setTaskDate(new Date());\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: task ? 'Editar Tarea' : 'Crear Tarea'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: taskName,\n        onChange: e => setTaskName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Descripci\\xF3n\",\n        value: taskDescription,\n        onChange: e => setTaskDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: taskDate,\n        onChange: date => setTaskDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"cancel-button\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"save-button\",\n          children: task ? 'Guardar' : 'Crear'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskModal, \"nedhqJbAegKDbB0MPYCXhRqUQCk=\");\n_c = TaskModal;\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","TaskModal","isOpen","onClose","onSave","task","_s","taskName","setTaskName","name","taskDescription","setTaskDescription","description","taskDate","setTaskDate","Date","date","handleSave","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","selected","onClick","_c","$RefreshReg$"],"sources":["D:/OneDrive/Escritorio/DLOOToDoList/frontend/src/components/Task/TaskModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './TaskModal.css';\r\n\r\nfunction TaskModal({ isOpen, onClose, onSave, task }) {\r\n  const [taskName, setTaskName] = useState(task ? task.name : '');\r\n  const [taskDescription, setTaskDescription] = useState(task ? task.description : '');\r\n  const [taskDate, setTaskDate] = useState(task ? new Date(task.date) : new Date());\r\n\r\n  const handleSave = () => {\r\n    onSave({ name: taskName, description: taskDescription, date: taskDate, status: task ? task.status : 'hoy' });\r\n    setTaskName('');\r\n    setTaskDescription('');\r\n    setTaskDate(new Date());\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>{task ? 'Editar Tarea' : 'Crear Tarea'}</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre\"\r\n          value={taskName}\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"DescripciÃ³n\"\r\n          value={taskDescription}\r\n          onChange={(e) => setTaskDescription(e.target.value)}\r\n        />\r\n        <DatePicker\r\n          selected={taskDate}\r\n          onChange={(date) => setTaskDate(date)}\r\n        />\r\n        <div className=\"modal-buttons\">\r\n          <button onClick={onClose} className=\"cancel-button\">Cancelar</button>\r\n          <button onClick={handleSave} className=\"save-button\">{task ? 'Guardar' : 'Crear'}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}